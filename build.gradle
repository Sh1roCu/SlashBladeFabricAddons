plugins {
    id 'fabric-loom' version '1.11.8'
    id 'maven-publish'
}

version = project.mod_version
group = project.maven_group

base {
    archivesName = project.archives_base_name
}


fabricApi {
    configureDataGeneration {
        client = true
    }
}

loom {
    accessWidenerPath = file("src/main/resources/slashblade_fabric_addons.accesswidener")
    mixin {
        defaultRefmapName = "slashblade_fabric_addons.refmap.json"
    }
    runs {
        datagen {
            property "fabric-api.datagen.modid", "slashblade_fabric_addons"
        }
    }
}

repositories {
    maven {
        name = 'ParchmentMC'
        url = 'https://maven.parchmentmc.org'
    }
    maven {
        name = "Modrinth"
        url = "https://api.modrinth.com/maven"
    }
    maven {
        url "https://cursemaven.com"
    }
    maven {
        url = "https://raw.github.com/Sh1roCu/Sh1roCu_MCRepo/master/repository"
    }
    maven {
        // location of the maven that hosts JEI files since January 2023
        name = "Jared's maven"
        url = "https://maven.blamejared.com/"
    }
    maven {
        // location of a maven mirror for JEI files, as a fallback
        name = "ModMaven"
        url = "https://modmaven.dev"
    }
    maven {
        name "KosmX's maven"
        url 'https://maven.kosmx.dev/'
    }
    maven {
        name = "Ladysnake Mods"
        url = 'https://maven.ladysnake.org/releases'
    }
    maven {
        name = "TerraformersMC"
        url = "https://maven.terraformersmc.com/"
        content {
            includeGroup "dev.emi"
        }
    }
    maven {
        url "https://maven.jamieswhiteshirt.com/libs-release"
        content {
            includeGroup "com.jamieswhiteshirt"
        }
    }
    maven { url = "https://mvn.devos.one/releases/" }
    maven { url = "https://mvn.devos.one/snapshots/" }
    maven {
        name = "Fuzs Mod Resources"
        url = "https://raw.githubusercontent.com/Fuzss/modresources/main/maven/"
    }
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    // mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    mappings loom.layered() {
        officialMojangMappings()
        parchment("org.parchmentmc.data:parchment-${project.parchment_minecraft_version}:${project.parchment_mappings_version}@zip")
    }
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

    modImplementation("cn.sh1rocu:slashblade-refabricated:1.21.1-1.0.1-Resharped-1.7.55")
    modImplementation "org.ladysnake.cardinal-components-api:cardinal-components-base:${project.cca_version}"
    modImplementation "org.ladysnake.cardinal-components-api:cardinal-components-entity:${project.cca_version}"
    modImplementation("io.github.fabricators_of_create.Porting-Lib:items:3.1.0-beta.75+1.21.1")

    modCompileOnlyApi("mezz.jei:jei-${minecraft_version}-common-api:${jei_version}")
    modCompileOnlyApi("mezz.jei:jei-${minecraft_version}-fabric-api:${jei_version}")
    modRuntimeOnly("mezz.jei:jei-${minecraft_version}-fabric:${jei_version}")

    modRuntimeOnly("dev.kosmx.player-anim:player-animation-lib-fabric:2.0.1+1.21.1")

    // TODO: 暂无1.21，先使用1.20通过编译
    modCompileOnly('vazkii.botania:Botania:1.20.1-446-FABRIC') {
        exclude(group: "dev.onyxstudios.cardinal-components-api")
    }

    modImplementation('vazkii.patchouli:Patchouli:1.21-87-FABRIC')

    modImplementation(include("io.github.fabricators_of_create.Porting-Lib:base:3.1.0-beta.75+1.21.1"))
    include modApi('teamreborn:energy:4.1.0') {
        exclude(group: "net.fabricmc.fabric-api")
    }
}

processResources {
    inputs.property "version", project.version
    inputs.property "minecraft_version", project.minecraft_version
    inputs.property "loader_version", project.loader_version
    filteringCharset "UTF-8"

    filesMatching("fabric.mod.json") {
        expand "version": project.version,
                "minecraft_version": project.minecraft_version,
                "loader_version": project.loader_version
    }
}

def targetJavaVersion = 21
tasks.withType(JavaCompile).configureEach {
    it.options.encoding = "UTF-8"
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        it.options.release.set(targetJavaVersion)
    }
}

java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
    withSourcesJar()
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}" }
    }
}

publishing {
    publications {
        create("mavenJava", MavenPublication) {
            artifactId = project.archives_base_name
            from components.java
        }
    }

    repositories {
        maven {
            url "file:///D:/github_maven/Sh1roCu_MCRepo/repository"
        }
    }
}
